# Manual bitwarden installation with docker
# See https://help.bitwarden.com/article/install-on-premise/#manual-docker-installations for more information

# Prerequisites
- name: Ensure specified external repositories are installed
  package:
    name: epel-release
    state: installed
- name: install the latest version of docker, docker-compose and unzip
  package:
    name:
      - docker
      - docker-compose
      - unzip
      - python-pip
      - mod_ssl
      - openssl
    state: latest
- name: upgrade version of pip to latest
  pip:
    name: pip
    state: latest
- name: Start docker service
  service:
    name: docker
    state: started
    enabled: yes

# Step 1
# Download a stubbed version of Bitwarden’s dependencies (docker-stub.zip) from the releases pages on GitHub.
- name: Download docker compose file
  get_url:
    url: https://github.com/bitwarden/server/releases/download/v1.32.0/docker-stub.zip
    dest: /root/docker-stub.zip
    mode: 0777

# Step 2
# Create a new directory named bwdata and extract the docker-stub.zip archive to it. The directory structure provided matches what the ./docker/docker-compose.yml file’s mapped volumes expect, however, you are free to change the location of these mappings on the host machine if desired.
- name: Create bwdata folder
  file: path=/root/bwdata state=directory
- name: Extract docker-stub.zip into bwdata/docker-stub/
  unarchive:
    src: /root/docker-stub.zip
    dest: /root/bwdata
    remote_src: yes

# Step 3
# Get your installation__id and installation__key from https://bitwarden.com/host and provide them to the application’s environment variables at ./env/global.override.env
- name: Enter installation id in ./bwdata/env/global.override.env
  lineinfile:
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__installation__id'
    line: globalSettings__installation__id={{ bitwarden_installation_id }}
- name: Enter installation key in ./bwdata/env/global.override.env
  lineinfile:
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__installation__key'
    line: globalSettings__installation__key={{ bitwarden_installation_key }}

# Step 4
# Update the baseServiceUri__* and attachment__baseUrl application environment variables for your hostname at ./env/global.override.env
- name: Replace vault service url in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__baseServiceUri__vault='
    line: globalSettings__baseServiceUri__vault=https://{{ bitwarden_hostname }}/

- name: Replace api service url in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__baseServiceUri__api='
    line: globalSettings__baseServiceUri__api=https://{{ bitwarden_hostname }}/api

- name: Replace identity service url in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__baseServiceUri__identity='
    line: globalSettings__baseServiceUri__identity=https://{{ bitwarden_hostname }}/identity

- name: Replace admin service url in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__baseServiceUri__admin='
    line: globalSettings__baseServiceUri__admin=https://{{ bitwarden_hostname }}/admin

- name: Replace notifications service url in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__baseServiceUri__notifications='
    line: globalSettings__baseServiceUri__notifications=https://{{ bitwarden_hostname }}/notifications

- name: Replace attachment base url in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__attachment__baseUrl='
    line: globalSettings__attachment__baseUrl=https://{{ bitwarden_hostname }}/attachments

# Step 5
# Generate a .pfx certificate file for the identity container and place it in the mapped volume directory at ./identity/identity.pfx.

- name: Generate idenity.key and identity.crt
  command: openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout /root/bwdata/identity/identity.key -out /root/bwdata/identity/identity.crt -subj '/CN=Bitwarden IdentityServer' -days 10950
- name: Gen
  command: openssl pkcs12 -export -out /root/bwdata/identity/identity.pfx -inkey /root/bwdata/identity/identity.key -in /root/bwdata/identity/identity.crt -certfile /root/bwdata/identity/identity.crt -passout pass:'{{ bitwarden_identitypassword }}'
- name: Replace identity_cert_password
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__identityServer__certificatePassword='
    line: globalSettings__identityServer__certificatePassword={{ bitwarden_identitypassword }}

# Step 6
# Copy your SSL certificate and keys to the ./ssl directory. By default, this directory is mapped to the nginx container at /etc/ssl. The ./nginx/default.conf can be adjusted to utilize these certificates as desired.

- name: Creates directory for certificate
  file: 
    path: '/root/bwdata/ssl/{{ bitwarden_hostname }}' 
    state: directory
    owner: root
    group: root
    mode: 0777

- name: Copy user defined key file
  copy:
    src: "{{ bitwarden_ssl_certificate_key_file }}"
    dest: "{{ bitwarden_key_dir }}/{{ bitwarden_ssl_certificate_key_file }}"

- name: Copy custom certificate file
  copy:
    src: "{{ bitwarden_ssl_certificate_file }}"
    dest: "{{ bitwarden_cert_dir }}/{{ bitwarden_ssl_certificate_file }}"

- name: Copy ca certificate file
  copy:
    src: "{{ bitwarden_ssl_certificate_file }}"
    dest: "{{ bitwarden_cert_dir }}/{{ bitwarden_ssl_ca_certificate_file }}"

# Step 7
# Update the server_name, HTTPS redirects, and Content-Security-Policy header with your hostname at ./nginx/default.conf
- name: Set Hostname
  replace:
    path: /root/bwdata/nginx/default.conf
    regexp: 'bitwarden.example.com'
    replace: "{{ bitwarden_hostname }}"

# Step 8
# Generate your own random password strings for the sqlServer__connectionString RANDOM_DATABASE_PASSWORD, internalIdentityKey RANDOM_IDENTITY_KEY, and duo__aKey RANDOM_DUO_AKEY and update the variables at ./env/global.override.env. Also be sure to apply the same RANDOM_DATABASE_PASSWORD at ./env/mssql.override.env
- name: Replace sqlServer__Connectionstring
  replace:
    path: /root/bwdata/env/global.override.env
    regexp: RANDOM_DATABASE_PASSWORD
    replace: "{{ bitwarden_sql_connectionstring }}"
- name: Replace internalIdentityKey
  replace:
    path: /root/bwdata/env/global.override.env
    regexp: RANDOM_IDENTITY_KEY
    replace: "{{ bitwarden_identityKey }}"
- name: Replace duo__aKey
  replace:
    path: /root/bwdata/env/global.override.env
    regexp: RANDOM_DUO_AKEY
    replace: "{{ bitwarden_duo_akey }}"
- name: Change sqlServer__Connectionstring
  lineinfile: 
    path: /root/bwdata/env/mssql.override.env
    regexp: 'SA_PASSWORD='
    line: SA_PASSWORD={{ bitwarden_sql_connectionstring }}

# Step 9
# Update the app-id.json file at ./web/app-id.json to include your hostname’s URL (ex. https://bitwarden.example.com)
- name: Setting Hostname
  replace:
    path: /root/bwdata/web/app-id.json
    regexp: 'bitwarden.example.com'
    replace: "{{ bitwarden_hostname }}"

# Step 10
# Configure your SMTP mail server and any other desired application settings at ./env/global.override.env
- name: Replace mail in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__mail__replyToEmail='
    line: globalSettings__mail__replyToEmail={{ bitwarden_mail }}
- name: Replace snmp host in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__mail__smtp__host='
    line: globalSettings__mail__smtp__host={{ bitwarden_smtp_host }}
- name: Replace snmp port in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__mail__smtp__port='
    line: globalSettings__mail__smtp__port={{ bitwarden_smtp_port }}
- name: Replace snmp ssl in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__mail__smtp__ssl='
    line: globalSettings__mail__smtp__ssl={{ bitwarden_smtp_ssl }}
- name: Replace snmp username in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__mail__smtp__username='
    line: globalSettings__mail__smtp__username={{ bitwarden_smtp_username }}
- name: Replace snmp password in ./bwdata/env/global.override.env
  lineinfile: 
    path: /root/bwdata/env/global.override.env
    regexp: 'globalSettings__mail__smtp__password='
    line: globalSettings__mail__smtp__password={{ bitwarden_smtp_password }}

# Step 11
# Map the desired user and group id for the Bitwarden containers to run under at ./env/uid.env
- name: Set User and Group ID
  blockinfile: 
    path: /root/bwdata/env/uid.env
    block: |
      LOCAL_UID={{ bitwarden_UID }}
      LOCAL_GID={{ bitwarden_GID }}

# Step 12
# Start your Bitwarden installation and access it at your configured hostname
- name: Start docker containers
  command: docker-compose -f /root/bwdata/docker/docker-compose.yml up -d
